basePath: /api
definitions:
  dtos.BookingCompleteDTO:
    properties:
      date:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  dtos.BookingDTO:
    properties:
      date:
        type: string
      name:
        type: string
    type: object
  dtos.ClassScheduleCompleteDTO:
    properties:
      capacity:
        type: integer
      endDate:
        type: string
      id:
        type: integer
      name:
        type: string
      startDate:
        type: string
    type: object
  dtos.ClassScheduleDTO:
    properties:
      capacity:
        type: integer
      endDate:
        type: string
      name:
        type: string
      startDate:
        type: string
    required:
    - capacity
    - endDate
    - name
    - startDate
    type: object
host: localhost:8080
info:
  contact:
    email: la_luisalmas@hotmail.com
    name: Lu√≠s Almas
  description: A book management service API in Go using Gin framework.
  title: Gym management API
  version: "1.0"
paths:
  /bookings:
    get:
      description: Returns all bookings.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.BookingCompleteDTO'
            type: array
      summary: Get bookings
      tags:
      - bookings
    post:
      description: Post a new booking.
      parameters:
      - description: BookingDTO JSON
        in: body
        name: bookingDTO
        required: true
        schema:
          $ref: '#/definitions/dtos.BookingDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.BookingCompleteDTO'
        "400":
          description: Bad Request
      summary: Post booking
      tags:
      - bookings
  /bookings/{id}:
    delete:
      description: Deletes a booking.
      parameters:
      - description: Booking Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.BookingCompleteDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Delete booking
      tags:
      - bookings
    get:
      description: Returns single booking.
      parameters:
      - description: Booking Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.BookingCompleteDTO'
        "404":
          description: Not Found
      summary: Get booking
      tags:
      - bookings
    put:
      description: Updates a booking.
      parameters:
      - description: Booking Id
        in: path
        name: id
        required: true
        type: string
      - description: BookingDTO JSON
        in: body
        name: bookingDTO
        required: true
        schema:
          $ref: '#/definitions/dtos.BookingDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.BookingCompleteDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Put booking
      tags:
      - bookings
  /classes:
    get:
      description: Returns all scheduled classes.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.ClassScheduleCompleteDTO'
            type: array
      summary: Get classes
      tags:
      - classes
    post:
      description: Post a new class.
      parameters:
      - description: ClassScheduleDTO JSON
        in: body
        name: classScheduleDTO
        required: true
        schema:
          $ref: '#/definitions/dtos.ClassScheduleDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.ClassScheduleCompleteDTO'
        "400":
          description: Bad Request
      summary: Post class
      tags:
      - classes
  /classes/{id}:
    delete:
      description: Deletes a class.
      parameters:
      - description: ClassSchedule Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ClassScheduleCompleteDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Delete classes
      tags:
      - classes
    get:
      description: Returns single class.
      parameters:
      - description: ClassSchedule Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ClassScheduleCompleteDTO'
        "404":
          description: Not Found
      summary: Get class
      tags:
      - classes
    put:
      description: Updates a class.
      parameters:
      - description: ClassSchedule Id
        in: path
        name: id
        required: true
        type: string
      - description: ClassScheduleDTO JSON
        in: body
        name: classScheduleDTO
        required: true
        schema:
          $ref: '#/definitions/dtos.ClassScheduleDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ClassScheduleCompleteDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Put classes
      tags:
      - classes
swagger: "2.0"
